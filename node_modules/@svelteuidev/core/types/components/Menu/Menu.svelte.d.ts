import { SvelteComponentTyped } from "svelte";
export declare const ctx = "Menu";
declare const __propDef: {
    props: {
        class?: string;
        open?: () => void;
        close?: () => void;
        toggle?: () => void;
        control?: HTMLOrSVGElement | typeof import("svelte").SvelteComponent;
        closeOnItemClick?: boolean;
        controlRefProp?: string;
        clickOutsideEvents?: string[];
        closeOnScroll?: boolean;
        delay?: number;
        menuButtonLabel?: string;
        menuId?: string;
        radius?: import("../..").SvelteUINumberSize;
        opened?: boolean;
        shadow?: import("../..").SvelteUIShadow;
        size?: import("../..").SvelteUINumberSize | "auto";
        trigger?: "click" | "hover";
        trapFocus?: boolean;
        withinPortal?: boolean;
        zIndex?: number;
        transition?: import("../../internal").TransitionName;
        transitionOptions?: import("../../internal").TransitionOptions;
        onClose?(): void;
        onOpen?(): void;
        className?: string;
        override?: {
            "@xs"?: import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
            "@sm"?: import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
            "@md"?: import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
            "@lg"?: import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
            "@xl"?: import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
        } & {
            alignContent?: import("@stitches/core/types/css").Property.AlignContent | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            alignItems?: import("@stitches/core/types/css").Property.AlignItems | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            alignSelf?: import("@stitches/core/types/css").Property.AlignSelf | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            alignTracks?: import("@stitches/core/types/css").Property.AlignTracks | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationDelay?: import("@stitches/core/types/css").OnlyString | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationDirection?: import("@stitches/core/types/css").Property.AnimationDirection | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationDuration?: import("@stitches/core/types/css").OnlyString | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationFillMode?: import("@stitches/core/types/css").Property.AnimationFillMode | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationIterationCount?: import("@stitches/core/types/css").Property.AnimationIterationCount | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationName?: import("@stitches/core/types/css").Property.AnimationName | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationPlayState?: import("@stitches/core/types/css").Property.AnimationPlayState | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animationTimingFunction?: import("@stitches/core/types/css").Property.AnimationTimingFunction | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            appearance?: import("@stitches/core/types/css").Property.Appearance | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            aspectRatio?: import("@stitches/core/types/css").Property.AspectRatio | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backdropFilter?: import("@stitches/core/types/css").Property.BackdropFilter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backfaceVisibility?: import("@stitches/core/types/css").Property.BackfaceVisibility | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundAttachment?: import("@stitches/core/types/css").Property.BackgroundAttachment | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundBlendMode?: import("@stitches/core/types/css").Property.BackgroundBlendMode | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundClip?: import("@stitches/core/types/css").Property.BackgroundClip | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            backgroundImage?: import("@stitches/core/types/css").Property.BackgroundImage | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            backgroundOrigin?: import("@stitches/core/types/css").Property.BackgroundOrigin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundPositionX?: import("@stitches/core/types/css").Property.BackgroundPositionX | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundPositionY?: import("@stitches/core/types/css").Property.BackgroundPositionY | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundRepeat?: import("@stitches/core/types/css").Property.BackgroundRepeat | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            backgroundSize?: import("@stitches/core/types/css").Property.BackgroundSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            blockOverflow?: import("@stitches/core/types/css").Property.BlockOverflow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            blockSize?: import("@stitches/core/types/css").Property.BlockSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            borderBlockColor?: import("@stitches/core/types/css").Property.BorderBlockColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockEndColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockEndStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockEndWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockStartColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockStartStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockStartWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBlockWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBottomColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderBottomLeftRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            borderBottomRightRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            borderBottomStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderBottomWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$black" | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$light" | "$normal" | "$bold" | "$extrabold";
            borderCollapse?: import("@stitches/core/types/css").Property.BorderCollapse | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderEndEndRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderEndStartRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderImageOutset?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderImageRepeat?: import("@stitches/core/types/css").Property.BorderImageRepeat | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderImageSlice?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderImageSource?: import("@stitches/core/types/css").Property.BorderImageSource | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderImageWidth?: import("@stitches/core/types/css").Property.BorderImageWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineColor?: import("@stitches/core/types/css").Property.BorderInlineColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineEndColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineEndStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineEndWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineStartColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineStartStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineStartWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderInlineWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderLeftColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderLeftStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderLeftWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$black" | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$light" | "$normal" | "$bold" | "$extrabold";
            borderRightColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderRightStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderRightWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$black" | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$light" | "$normal" | "$bold" | "$extrabold";
            borderSpacing?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderStartEndRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderStartStartRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderTopColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderTopLeftRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            borderTopRightRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            borderTopStyle?: ("inset" | "none" | "hidden" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderTopWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$black" | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$light" | "$normal" | "$bold" | "$extrabold";
            bottom?: import("@stitches/core/types/css").Property.Bottom | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            boxDecorationBreak?: import("@stitches/core/types/css").Property.BoxDecorationBreak | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            boxShadow?: import("@stitches/core/types/css").Property.BoxShadow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            boxSizing?: import("@stitches/core/types/css").Property.BoxSizing | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            breakAfter?: import("@stitches/core/types/css").Property.BreakAfter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            breakBefore?: import("@stitches/core/types/css").Property.BreakBefore | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            breakInside?: import("@stitches/core/types/css").Property.BreakInside | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            captionSide?: import("@stitches/core/types/css").Property.CaptionSide | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            caretColor?: import("@stitches/core/types/css").Property.CaretColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            clear?: import("@stitches/core/types/css").Property.Clear | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            clipPath?: import("@stitches/core/types/css").Property.ClipPath | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            color?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            colorAdjust?: import("@stitches/core/types/css").Property.ColorAdjust | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            colorScheme?: import("@stitches/core/types/css").Property.ColorScheme | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnCount?: import("@stitches/core/types/css").Property.ColumnCount | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnFill?: import("@stitches/core/types/css").Property.ColumnFill | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnGap?: import("@stitches/core/types/css").Property.ColumnGap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            columnRuleColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            columnRuleStyle?: import("@stitches/core/types/css").Property.ColumnRuleStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnRuleWidth?: import("@stitches/core/types/css").Property.ColumnRuleWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnSpan?: import("@stitches/core/types/css").Property.ColumnSpan | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnWidth?: import("@stitches/core/types/css").Property.ColumnWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            contain?: import("@stitches/core/types/css").Property.Contain | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            content?: import("@stitches/core/types/css").Property.Content | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            contentVisibility?: import("@stitches/core/types/css").Property.ContentVisibility | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            counterIncrement?: import("@stitches/core/types/css").Property.CounterIncrement | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            counterReset?: import("@stitches/core/types/css").Property.CounterReset | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            counterSet?: import("@stitches/core/types/css").Property.CounterSet | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            cursor?: import("@stitches/core/types/css").Property.Cursor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            direction?: import("@stitches/core/types/css").Property.Direction | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            display?: import("@stitches/core/types/css").Property.Display | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            emptyCells?: import("@stitches/core/types/css").Property.EmptyCells | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            filter?: import("@stitches/core/types/css").Property.Filter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flexBasis?: import("@stitches/core/types/css").Property.FlexBasis | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            flexDirection?: import("@stitches/core/types/css").Property.FlexDirection | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flexGrow?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flexShrink?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flexWrap?: import("@stitches/core/types/css").Property.FlexWrap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            float?: import("@stitches/core/types/css").Property.Float | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontFamily?: import("@stitches/core/types/css").Property.FontFamily | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$standard" | "$mono" | "$fallback";
            fontFeatureSettings?: import("@stitches/core/types/css").Property.FontFeatureSettings | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontKerning?: import("@stitches/core/types/css").Property.FontKerning | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontLanguageOverride?: import("@stitches/core/types/css").Property.FontLanguageOverride | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontOpticalSizing?: import("@stitches/core/types/css").Property.FontOpticalSizing | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontSize?: import("@stitches/core/types/css").Property.FontSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            fontSizeAdjust?: import("@stitches/core/types/css").Property.FontSizeAdjust | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontSmooth?: import("@stitches/core/types/css").Property.FontSmooth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontStretch?: ("normal" | import("@stitches/core/types/css").OnlyString | "condensed" | "expanded" | "extra-condensed" | "extra-expanded" | "semi-condensed" | "semi-expanded" | "ultra-condensed" | "ultra-expanded") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontStyle?: import("@stitches/core/types/css").Property.FontStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontSynthesis?: import("@stitches/core/types/css").Property.FontSynthesis | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariant?: import("@stitches/core/types/css").Property.FontVariant | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariantCaps?: import("@stitches/core/types/css").Property.FontVariantCaps | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariantEastAsian?: import("@stitches/core/types/css").Property.FontVariantEastAsian | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariantLigatures?: import("@stitches/core/types/css").Property.FontVariantLigatures | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariantNumeric?: import("@stitches/core/types/css").Property.FontVariantNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariantPosition?: import("@stitches/core/types/css").Property.FontVariantPosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontVariationSettings?: import("@stitches/core/types/css").Property.FontVariationSettings | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fontWeight?: import("@stitches/core/types/css").Property.FontWeight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$light" | "$normal" | "$bold" | "$extrabold" | "$thin" | "$extralight" | "$medium" | "$semibold";
            forcedColorAdjust?: import("@stitches/core/types/css").Property.ForcedColorAdjust | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridAutoColumns?: import("@stitches/core/types/css").Property.GridAutoColumns | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridAutoFlow?: import("@stitches/core/types/css").Property.GridAutoFlow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridAutoRows?: import("@stitches/core/types/css").Property.GridAutoRows | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridColumnEnd?: ("auto" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridColumnStart?: ("auto" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridRowEnd?: ("auto" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridRowStart?: ("auto" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridTemplateAreas?: import("@stitches/core/types/css").Property.GridTemplateAreas | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridTemplateColumns?: import("@stitches/core/types/css").Property.GridTemplateColumns | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            gridTemplateRows?: import("@stitches/core/types/css").Property.GridTemplateRows | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            hangingPunctuation?: import("@stitches/core/types/css").Property.HangingPunctuation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            height?: import("@stitches/core/types/css").Property.Height | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            hyphens?: import("@stitches/core/types/css").Property.Hyphens | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            imageOrientation?: import("@stitches/core/types/css").Property.ImageOrientation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            imageRendering?: import("@stitches/core/types/css").Property.ImageRendering | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            imageResolution?: import("@stitches/core/types/css").Property.ImageResolution | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            initialLetter?: import("@stitches/core/types/css").Property.InitialLetter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            inlineSize?: import("@stitches/core/types/css").Property.InlineSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            inset?: import("@stitches/core/types/css").Property.Inset | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetBlock?: import("@stitches/core/types/css").Property.InsetBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetBlockEnd?: import("@stitches/core/types/css").Property.InsetBlockEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetBlockStart?: import("@stitches/core/types/css").Property.InsetBlockStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetInline?: import("@stitches/core/types/css").Property.InsetInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetInlineEnd?: import("@stitches/core/types/css").Property.InsetInlineEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            insetInlineStart?: import("@stitches/core/types/css").Property.InsetInlineStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            isolation?: import("@stitches/core/types/css").Property.Isolation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            justifyContent?: import("@stitches/core/types/css").Property.JustifyContent | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            justifyItems?: import("@stitches/core/types/css").Property.JustifyItems | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            justifySelf?: import("@stitches/core/types/css").Property.JustifySelf | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            justifyTracks?: import("@stitches/core/types/css").Property.JustifyTracks | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            left?: import("@stitches/core/types/css").Property.Left | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            letterSpacing?: import("@stitches/core/types/css").Property.LetterSpacing | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$normal" | "$tighter" | "$tight" | "$wide" | "$wider" | "$widest";
            lineBreak?: import("@stitches/core/types/css").Property.LineBreak | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            lineHeight?: import("@stitches/core/types/css").Property.LineHeight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            lineHeightStep?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            listStyleImage?: import("@stitches/core/types/css").Property.ListStyleImage | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            listStylePosition?: import("@stitches/core/types/css").Property.ListStylePosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            listStyleType?: import("@stitches/core/types/css").Property.ListStyleType | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            marginBlock?: import("@stitches/core/types/css").Property.MarginBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginBlockEnd?: import("@stitches/core/types/css").Property.MarginBlockEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginBlockStart?: import("@stitches/core/types/css").Property.MarginBlockStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginBottom?: import("@stitches/core/types/css").Property.MarginBottom | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginInline?: import("@stitches/core/types/css").Property.MarginInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginInlineEnd?: import("@stitches/core/types/css").Property.MarginInlineEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginInlineStart?: import("@stitches/core/types/css").Property.MarginInlineStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginLeft?: import("@stitches/core/types/css").Property.MarginLeft | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginRight?: import("@stitches/core/types/css").Property.MarginRight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            marginTop?: import("@stitches/core/types/css").Property.MarginTop | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            maskBorderMode?: import("@stitches/core/types/css").Property.MaskBorderMode | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorderOutset?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorderRepeat?: import("@stitches/core/types/css").Property.MaskBorderRepeat | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorderSlice?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorderSource?: import("@stitches/core/types/css").Property.MaskBorderSource | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorderWidth?: import("@stitches/core/types/css").Property.MaskBorderWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskClip?: import("@stitches/core/types/css").Property.MaskClip | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskComposite?: import("@stitches/core/types/css").Property.MaskComposite | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskImage?: import("@stitches/core/types/css").Property.MaskImage | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskMode?: import("@stitches/core/types/css").Property.MaskMode | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskOrigin?: import("@stitches/core/types/css").Property.MaskOrigin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskPosition?: import("@stitches/core/types/css").Property.MaskPosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskRepeat?: import("@stitches/core/types/css").Property.MaskRepeat | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskSize?: import("@stitches/core/types/css").Property.MaskSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskType?: import("@stitches/core/types/css").Property.MaskType | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            mathStyle?: import("@stitches/core/types/css").Property.MathStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maxBlockSize?: import("@stitches/core/types/css").Property.MaxBlockSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            maxHeight?: import("@stitches/core/types/css").Property.MaxHeight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            maxInlineSize?: import("@stitches/core/types/css").Property.MaxInlineSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            maxLines?: import("@stitches/core/types/css").Property.MaxLines | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maxWidth?: import("@stitches/core/types/css").Property.MaxWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            minBlockSize?: import("@stitches/core/types/css").Property.MinBlockSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            minHeight?: import("@stitches/core/types/css").Property.MinHeight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            minInlineSize?: import("@stitches/core/types/css").Property.MinInlineSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            minWidth?: import("@stitches/core/types/css").Property.MinWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            mixBlendMode?: ("normal" | "color" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "soft-light") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            motionDistance?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            motionPath?: import("@stitches/core/types/css").Property.OffsetPath | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            motionRotation?: import("@stitches/core/types/css").Property.OffsetRotate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            objectFit?: import("@stitches/core/types/css").Property.ObjectFit | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            objectPosition?: ("bottom" | "left" | "right" | "top" | "center" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offsetAnchor?: import("@stitches/core/types/css").Property.OffsetAnchor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offsetDistance?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offsetPath?: import("@stitches/core/types/css").Property.OffsetPath | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offsetRotate?: import("@stitches/core/types/css").Property.OffsetRotate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offsetRotation?: import("@stitches/core/types/css").Property.OffsetRotate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            opacity?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            order?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            orphans?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            outlineColor?: import("@stitches/core/types/css").Property.OutlineColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            outlineOffset?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            outlineStyle?: import("@stitches/core/types/css").Property.OutlineStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            outlineWidth?: (number | "thin" | "medium" | "thick") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowAnchor?: import("@stitches/core/types/css").Property.OverflowAnchor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowBlock?: import("@stitches/core/types/css").Property.OverflowBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowClipBox?: import("@stitches/core/types/css").Property.OverflowClipBox | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowClipMargin?: import("@stitches/core/types/css").Property.OverflowClipMargin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowInline?: import("@stitches/core/types/css").Property.OverflowInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowWrap?: import("@stitches/core/types/css").Property.OverflowWrap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowX?: import("@stitches/core/types/css").Property.OverflowX | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overflowY?: import("@stitches/core/types/css").Property.OverflowY | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overscrollBehaviorBlock?: import("@stitches/core/types/css").Property.OverscrollBehaviorBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overscrollBehaviorInline?: import("@stitches/core/types/css").Property.OverscrollBehaviorInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overscrollBehaviorX?: import("@stitches/core/types/css").Property.OverscrollBehaviorX | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overscrollBehaviorY?: import("@stitches/core/types/css").Property.OverscrollBehaviorY | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            paddingBlock?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingBlockEnd?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingBlockStart?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingBottom?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingInline?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingInlineEnd?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingInlineStart?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingLeft?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingRight?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            paddingTop?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            pageBreakAfter?: import("@stitches/core/types/css").Property.PageBreakAfter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            pageBreakBefore?: import("@stitches/core/types/css").Property.PageBreakBefore | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            pageBreakInside?: import("@stitches/core/types/css").Property.PageBreakInside | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            paintOrder?: import("@stitches/core/types/css").Property.PaintOrder | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            perspective?: import("@stitches/core/types/css").Property.Perspective | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            perspectiveOrigin?: ("bottom" | "left" | "right" | "top" | "center" | import("@stitches/core/types/css").OnlyStringNumeric) | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            placeContent?: import("@stitches/core/types/css").Property.PlaceContent | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            pointerEvents?: (number & Record<never, never>) | (string & Record<never, never>) | "all" | "fill" | "stroke" | "auto" | "none" | "visible" | "inherit" | "painted" | "visibleFill" | "visiblePainted" | "visibleStroke" | "initial" | "revert" | "unset" | import("@stitches/core/types/theme").ScaleValue;
            position?: import("@stitches/core/types/css").Property.Position | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            quotes?: import("@stitches/core/types/css").Property.Quotes | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            resize?: import("@stitches/core/types/css").Property.Resize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            right?: import("@stitches/core/types/css").Property.Right | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            rotate?: import("@stitches/core/types/css").Property.Rotate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            rowGap?: import("@stitches/core/types/css").Property.RowGap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            rubyAlign?: import("@stitches/core/types/css").Property.RubyAlign | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            rubyMerge?: import("@stitches/core/types/css").Property.RubyMerge | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            rubyPosition?: import("@stitches/core/types/css").Property.RubyPosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scale?: import("@stitches/core/types/css").Property.Scale | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollBehavior?: import("@stitches/core/types/css").Property.ScrollBehavior | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollMargin?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginBlock?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginBlockEnd?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginBlockStart?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginBottom?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginInline?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginInlineEnd?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginInlineStart?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginLeft?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginRight?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollMarginTop?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPadding?: import("@stitches/core/types/css").Property.ScrollPadding | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingBlock?: import("@stitches/core/types/css").Property.ScrollPaddingBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingBlockEnd?: import("@stitches/core/types/css").Property.ScrollPaddingBlockEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingBlockStart?: import("@stitches/core/types/css").Property.ScrollPaddingBlockStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingBottom?: import("@stitches/core/types/css").Property.ScrollPaddingBottom | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingInline?: import("@stitches/core/types/css").Property.ScrollPaddingInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingInlineEnd?: import("@stitches/core/types/css").Property.ScrollPaddingInlineEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingInlineStart?: import("@stitches/core/types/css").Property.ScrollPaddingInlineStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingLeft?: import("@stitches/core/types/css").Property.ScrollPaddingLeft | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingRight?: import("@stitches/core/types/css").Property.ScrollPaddingRight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollPaddingTop?: import("@stitches/core/types/css").Property.ScrollPaddingTop | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            scrollSnapAlign?: import("@stitches/core/types/css").Property.ScrollSnapAlign | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapMargin?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapMarginBottom?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapMarginLeft?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapMarginRight?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapMarginTop?: number | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapStop?: import("@stitches/core/types/css").Property.ScrollSnapStop | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollSnapType?: import("@stitches/core/types/css").Property.ScrollSnapType | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollbarColor?: import("@stitches/core/types/css").Property.ScrollbarColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollbarGutter?: import("@stitches/core/types/css").Property.ScrollbarGutter | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            scrollbarWidth?: import("@stitches/core/types/css").Property.ScrollbarWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            shapeImageThreshold?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            shapeMargin?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            shapeOutside?: import("@stitches/core/types/css").Property.ShapeOutside | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            tabSize?: import("@stitches/core/types/css").Property.TabSize | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            tableLayout?: import("@stitches/core/types/css").Property.TableLayout | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textAlign?: import("@stitches/core/types/css").Property.TextAlign | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textAlignLast?: import("@stitches/core/types/css").Property.TextAlignLast | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textCombineUpright?: import("@stitches/core/types/css").Property.TextCombineUpright | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            textDecorationLine?: import("@stitches/core/types/css").Property.TextDecorationLine | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationSkip?: import("@stitches/core/types/css").Property.TextDecorationSkip | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationSkipInk?: import("@stitches/core/types/css").Property.TextDecorationSkipInk | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationStyle?: import("@stitches/core/types/css").Property.TextDecorationStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationThickness?: import("@stitches/core/types/css").Property.TextDecorationThickness | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecorationWidth?: import("@stitches/core/types/css").Property.TextDecorationThickness | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textEmphasisColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textEmphasisPosition?: import("@stitches/core/types/css").OnlyString | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textEmphasisStyle?: import("@stitches/core/types/css").Property.TextEmphasisStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textIndent?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textJustify?: import("@stitches/core/types/css").Property.TextJustify | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textOrientation?: import("@stitches/core/types/css").Property.TextOrientation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textOverflow?: import("@stitches/core/types/css").Property.TextOverflow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textRendering?: import("@stitches/core/types/css").Property.TextRendering | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textShadow?: import("@stitches/core/types/css").Property.TextShadow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            textSizeAdjust?: import("@stitches/core/types/css").Property.TextSizeAdjust | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textTransform?: import("@stitches/core/types/css").Property.TextTransform | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textUnderlineOffset?: import("@stitches/core/types/css").Property.TextUnderlineOffset | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textUnderlinePosition?: import("@stitches/core/types/css").Property.TextUnderlinePosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            top?: import("@stitches/core/types/css").Property.Top | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            touchAction?: import("@stitches/core/types/css").Property.TouchAction | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transform?: import("@stitches/core/types/css").Property.Transform | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transformBox?: import("@stitches/core/types/css").Property.TransformBox | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transformOrigin?: import("@stitches/core/types/css").Property.TransformOrigin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transformStyle?: import("@stitches/core/types/css").Property.TransformStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transitionDelay?: import("@stitches/core/types/css").OnlyString | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transitionDuration?: import("@stitches/core/types/css").OnlyString | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transitionProperty?: import("@stitches/core/types/css").Property.TransitionProperty | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transitionTimingFunction?: import("@stitches/core/types/css").Property.TransitionTimingFunction | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            translate?: import("@stitches/core/types/css").Property.Translate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            unicodeBidi?: import("@stitches/core/types/css").Property.UnicodeBidi | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            userSelect?: import("@stitches/core/types/css").Property.UserSelect | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            verticalAlign?: import("@stitches/core/types/css").Property.VerticalAlign | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            visibility?: import("@stitches/core/types/css").Property.Visibility | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            whiteSpace?: import("@stitches/core/types/css").Property.WhiteSpace | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            widows?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            width?: import("@stitches/core/types/css").Property.Width | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            willChange?: import("@stitches/core/types/css").Property.WillChange | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            wordBreak?: import("@stitches/core/types/css").Property.WordBreak | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            wordSpacing?: import("@stitches/core/types/css").Property.WordSpacing | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            wordWrap?: import("@stitches/core/types/css").Property.WordWrap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            writingMode?: import("@stitches/core/types/css").Property.WritingMode | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            zIndex?: import("@stitches/core/types/css").Property.ZIndex | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$1" | "$2" | "$3" | "$4" | "$5" | "$10" | "$max";
            zoom?: import("@stitches/core/types/css").Property.Zoom | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            all?: import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            animation?: import("@stitches/core/types/css").Property.Animation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            background?: import("@stitches/core/types/css").Property.Background | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            backgroundPosition?: import("@stitches/core/types/css").Property.BackgroundPosition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            border?: import("@stitches/core/types/css").Property.Border | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderBlock?: import("@stitches/core/types/css").Property.BorderBlock | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderBlockEnd?: import("@stitches/core/types/css").Property.BorderBlockEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderBlockStart?: import("@stitches/core/types/css").Property.BorderBlockStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderBottom?: import("@stitches/core/types/css").Property.BorderBottom | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderColor?: import("@stitches/core/types/css").Property.BorderColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderImage?: import("@stitches/core/types/css").Property.BorderImage | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderInline?: import("@stitches/core/types/css").Property.BorderInline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderInlineEnd?: import("@stitches/core/types/css").Property.BorderInlineEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderInlineStart?: import("@stitches/core/types/css").Property.BorderInlineStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderLeft?: import("@stitches/core/types/css").Property.BorderLeft | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderRadius?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            borderRight?: import("@stitches/core/types/css").Property.BorderRight | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderStyle?: import("@stitches/core/types/css").Property.BorderStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            borderTop?: import("@stitches/core/types/css").Property.BorderTop | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            borderWidth?: import("@stitches/core/types/css").Property.BorderWidth | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columnRule?: import("@stitches/core/types/css").Property.ColumnRule | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            columns?: import("@stitches/core/types/css").Property.Columns | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flex?: import("@stitches/core/types/css").Property.Flex | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            flexFlow?: import("@stitches/core/types/css").Property.FlexFlow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            font?: import("@stitches/core/types/css").Property.Font | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gap?: import("@stitches/core/types/css").Property.Gap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            grid?: import("@stitches/core/types/css").Property.Grid | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridArea?: import("@stitches/core/types/css").Property.GridArea | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridColumn?: import("@stitches/core/types/css").Property.GridColumn | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridRow?: import("@stitches/core/types/css").Property.GridRow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            gridTemplate?: import("@stitches/core/types/css").Property.GridTemplate | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            lineClamp?: import("@stitches/core/types/css").Property.LineClamp | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            listStyle?: import("@stitches/core/types/css").Property.ListStyle | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            margin?: import("@stitches/core/types/css").Property.Margin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            mask?: import("@stitches/core/types/css").Property.Mask | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            maskBorder?: import("@stitches/core/types/css").Property.MaskBorder | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            motion?: import("@stitches/core/types/css").Property.Offset | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            offset?: import("@stitches/core/types/css").Property.Offset | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            outline?: import("@stitches/core/types/css").Property.Outline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            overflow?: import("@stitches/core/types/css").Property.Overflow | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            overscrollBehavior?: import("@stitches/core/types/css").Property.OverscrollBehavior | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            padding?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            placeItems?: import("@stitches/core/types/css").Property.PlaceItems | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            placeSelf?: import("@stitches/core/types/css").Property.PlaceSelf | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textDecoration?: import("@stitches/core/types/css").Property.TextDecoration | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textEmphasis?: import("@stitches/core/types/css").Property.TextEmphasis | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            transition?: import("@stitches/core/types/css").Property.Transition | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            alignmentBaseline?: import("@stitches/core/types/css").Property.AlignmentBaseline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            baselineShift?: import("@stitches/core/types/css").Property.BaselineShift | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            clip?: import("@stitches/core/types/css").Property.Clip | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            clipRule?: import("@stitches/core/types/css").Property.ClipRule | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            colorInterpolation?: import("@stitches/core/types/css").Property.ColorInterpolation | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            colorRendering?: import("@stitches/core/types/css").Property.ColorRendering | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            dominantBaseline?: import("@stitches/core/types/css").Property.DominantBaseline | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fill?: ("none" | (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | "child" | "context-fill" | "context-stroke") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            fillOpacity?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            fillRule?: import("@stitches/core/types/css").Property.FillRule | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            floodColor?: import("@stitches/core/types/css").Property.FloodColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            floodOpacity?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            glyphOrientationVertical?: import("@stitches/core/types/css").Property.GlyphOrientationVertical | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            lightingColor?: import("@stitches/core/types/css").Property.LightingColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            marker?: import("@stitches/core/types/css").Property.Marker | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            markerEnd?: import("@stitches/core/types/css").Property.MarkerEnd | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            markerMid?: import("@stitches/core/types/css").Property.MarkerMid | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            markerStart?: import("@stitches/core/types/css").Property.MarkerStart | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            shapeRendering?: import("@stitches/core/types/css").Property.ShapeRendering | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            stopColor?: import("@stitches/core/types/css").Property.StopColor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            stopOpacity?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            stroke?: ("none" | (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | "child" | "context-fill" | "context-stroke") | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            strokeDasharray?: import("@stitches/core/types/css").Property.StrokeDasharray | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeDashoffset?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeLinecap?: import("@stitches/core/types/css").Property.StrokeLinecap | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeLinejoin?: import("@stitches/core/types/css").Property.StrokeLinejoin | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeMiterlimit?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeOpacity?: import("@stitches/core/types/css").OnlyNumber | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            strokeWidth?: import("@stitches/core/types/css").OnlyStringNumeric | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            textAnchor?: import("@stitches/core/types/css").Property.TextAnchor | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
            vectorEffect?: import("@stitches/core/types/css").Property.VectorEffect | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
        } & {
            focusRing?: "auto" | "always" | "never";
            p?: {
                readonly [$$ScaleValue]: "space";
            } | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            pt?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            pr?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            pb?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            pl?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            px?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            py?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            m?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mt?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mr?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mb?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            ml?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mx?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            my?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            ta?: import("@stitches/core/types/css").Property.TextAlign | {
                readonly [$$PropertyValue]: "textAlign";
            } | import("@stitches/core/types/css").Globals;
            tt?: import("@stitches/core/types/css").Property.TextTransform | {
                readonly [$$PropertyValue]: "textTransform";
            } | import("@stitches/core/types/css").Globals;
            to?: import("@stitches/core/types/css").Property.TextOverflow | {
                readonly [$$PropertyValue]: "textOverflow";
            } | import("@stitches/core/types/css").Globals;
            d?: import("@stitches/core/types/css").Property.Display | {
                readonly [$$PropertyValue]: "display";
            } | import("@stitches/core/types/css").Globals;
            dflex?: "normal" | "left" | "right" | "space-around" | "space-between" | "space-evenly" | "stretch" | "center" | "end" | "flex-end" | "flex-start" | "start" | "baseline" | import("@stitches/core/types/css").OnlyString | "self-end" | "self-start" | {
                readonly [$$PropertyValue]: "alignItems" | "justifyContent";
            } | import("@stitches/core/types/css").Globals;
            fd?: import("@stitches/core/types/css").Property.FlexDirection | {
                readonly [$$PropertyValue]: "flexDirection";
            } | import("@stitches/core/types/css").Globals;
            fw?: import("@stitches/core/types/css").Property.FlexWrap | {
                readonly [$$PropertyValue]: "flexWrap";
            } | import("@stitches/core/types/css").Globals;
            ai?: import("@stitches/core/types/css").Property.AlignItems | {
                readonly [$$PropertyValue]: "alignItems";
            } | import("@stitches/core/types/css").Globals;
            ac?: import("@stitches/core/types/css").Property.AlignContent | {
                readonly [$$PropertyValue]: "alignContent";
            } | import("@stitches/core/types/css").Globals;
            jc?: import("@stitches/core/types/css").Property.JustifyContent | {
                readonly [$$PropertyValue]: "justifyContent";
            } | import("@stitches/core/types/css").Globals;
            as?: import("@stitches/core/types/css").Property.AlignSelf | {
                readonly [$$PropertyValue]: "alignSelf";
            } | import("@stitches/core/types/css").Globals;
            fg?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "flexGrow";
            } | import("@stitches/core/types/css").Globals;
            fs?: import("@stitches/core/types/css").Property.FontSize | {
                readonly [$$PropertyValue]: "fontSize";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            fb?: import("@stitches/core/types/css").Property.FlexBasis | {
                readonly [$$PropertyValue]: "flexBasis";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96";
            bc?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | {
                readonly [$$PropertyValue]: "backgroundColor";
            } | import("@stitches/core/types/css").Globals | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            bf?: import("@stitches/core/types/css").Property.BackdropFilter | {
                readonly [$$PropertyValue]: "backdropFilter";
            } | import("@stitches/core/types/css").Globals;
            bg?: import("@stitches/core/types/css").Property.Background | {
                readonly [$$PropertyValue]: "background";
            } | import("@stitches/core/types/css").Globals | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            bgBlur?: import("@stitches/core/types/css").Property.Background | {
                readonly [$$PropertyValue]: "background";
            } | import("@stitches/core/types/css").Globals | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            bgColor?: (import("@stitches/core/types/css").OnlyString | ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrange" | "DarkOrchid" | "DarkRed" | "DarkSalmon" | "DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" | "LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" | "MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" | "MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" | "Navy" | "OldLace" | "Olive" | "OliveDrab" | "Orange" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise" | "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "RebeccaPurple" | "Red" | "RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "SeaShell" | "Sienna" | "Silver" | "SkyBlue" | "SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato" | "transparent" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen") | ("ActiveText" | "ButtonFace" | "ButtonText" | "ButtonBorder" | "Canvas" | "CanvasText" | "Field" | "FieldText" | "GrayText" | "Highlight" | "HighlightText" | "LinkText" | "Mark" | "MarkText" | "VisitedText") | "CurrentColor" | "hsl(" | "lab(" | "rgb(") | {
                readonly [$$PropertyValue]: "backgroundColor";
            } | import("@stitches/core/types/css").Globals | "$dark50" | "$dark100" | "$dark200" | "$dark300" | "$dark400" | "$dark500" | "$dark600" | "$dark700" | "$dark800" | "$dark900" | "$gray50" | "$gray100" | "$gray200" | "$gray300" | "$gray400" | "$gray500" | "$gray600" | "$gray700" | "$gray800" | "$gray900" | "$red50" | "$red100" | "$red200" | "$red300" | "$red400" | "$red500" | "$red600" | "$red700" | "$red800" | "$red900" | "$pink50" | "$pink100" | "$pink200" | "$pink300" | "$pink400" | "$pink500" | "$pink600" | "$pink700" | "$pink800" | "$pink900" | "$grape50" | "$grape100" | "$grape200" | "$grape300" | "$grape400" | "$grape500" | "$grape600" | "$grape700" | "$grape800" | "$grape900" | "$violet50" | "$violet100" | "$violet200" | "$violet300" | "$violet400" | "$violet500" | "$violet600" | "$violet700" | "$violet800" | "$violet900" | "$indigo50" | "$indigo100" | "$indigo200" | "$indigo300" | "$indigo400" | "$indigo500" | "$indigo600" | "$indigo700" | "$indigo800" | "$indigo900" | "$blue50" | "$blue100" | "$blue200" | "$blue300" | "$blue400" | "$blue500" | "$blue600" | "$blue700" | "$blue800" | "$blue900" | "$cyan50" | "$cyan100" | "$cyan200" | "$cyan300" | "$cyan400" | "$cyan500" | "$cyan600" | "$cyan700" | "$cyan800" | "$cyan900" | "$teal50" | "$teal100" | "$teal200" | "$teal300" | "$teal400" | "$teal500" | "$teal600" | "$teal700" | "$teal800" | "$teal900" | "$green50" | "$green100" | "$green200" | "$green300" | "$green400" | "$green500" | "$green600" | "$green700" | "$green800" | "$green900" | "$lime50" | "$lime100" | "$lime200" | "$lime300" | "$lime400" | "$lime500" | "$lime600" | "$lime700" | "$lime800" | "$lime900" | "$yellow50" | "$yellow100" | "$yellow200" | "$yellow300" | "$yellow400" | "$yellow500" | "$yellow600" | "$yellow700" | "$yellow800" | "$yellow900" | "$orange50" | "$orange100" | "$orange200" | "$orange300" | "$orange400" | "$orange500" | "$orange600" | "$orange700" | "$orange800" | "$orange900" | "$primary" | "$white" | "$black";
            bgClip?: import("@stitches/core/types/css").Property.BackgroundClip | {
                readonly [$$PropertyValue]: "backgroundClip";
            } | import("@stitches/core/types/css").Globals;
            br?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "borderRadius";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            bw?: import("@stitches/core/types/css").Property.BorderWidth | {
                readonly [$$PropertyValue]: "borderWidth";
            } | import("@stitches/core/types/css").Globals;
            btrr?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "borderTopRightRadius";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            bbrr?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "borderBottomRightRadius";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            bblr?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "borderBottomLeftRadius";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            btlr?: import("@stitches/core/types/css").OnlyStringNumeric | {
                readonly [$$PropertyValue]: "borderTopLeftRadius";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$squared" | "$rounded" | "$pill";
            bs?: import("@stitches/core/types/css").Property.BoxShadow | {
                readonly [$$PropertyValue]: "boxShadow";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            normalShadow?: import("../../styles/theme/default-colors").Color;
            lh?: import("@stitches/core/types/css").Property.LineHeight | {
                readonly [$$PropertyValue]: "lineHeight";
            } | import("@stitches/core/types/css").Globals | "$xs" | "$sm" | "$md" | "$lg" | "$xl";
            ov?: import("@stitches/core/types/css").Property.Overflow | {
                readonly [$$PropertyValue]: "overflow";
            } | import("@stitches/core/types/css").Globals;
            ox?: import("@stitches/core/types/css").Property.OverflowX | {
                readonly [$$PropertyValue]: "overflowX";
            } | import("@stitches/core/types/css").Globals;
            oy?: import("@stitches/core/types/css").Property.OverflowY | {
                readonly [$$PropertyValue]: "overflowY";
            } | import("@stitches/core/types/css").Globals;
            pe?: "all" | "fill" | "stroke" | "auto" | "none" | "visible" | "inherit" | "painted" | "visibleFill" | "visiblePainted" | "visibleStroke" | {
                readonly [$$PropertyValue]: "pointerEvents";
            } | "initial" | "revert" | "unset";
            events?: "all" | "fill" | "stroke" | "auto" | "none" | "visible" | "inherit" | "painted" | "visibleFill" | "visiblePainted" | "visibleStroke" | {
                readonly [$$PropertyValue]: "pointerEvents";
            } | "initial" | "revert" | "unset";
            us?: import("@stitches/core/types/css").Property.UserSelect | {
                readonly [$$PropertyValue]: "userSelect";
            } | import("@stitches/core/types/css").Globals;
            w?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            h?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            minW?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            minH?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mw?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            maxW?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            mh?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            maxH?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            size?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            minSize?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            sizeMin?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            maxSize?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            sizeMax?: import("../../internal").LiteralUnion<{
                readonly [$$ScaleValue]: "space";
            }, string | number> | "$xs" | "$sm" | "$md" | "$lg" | "$xl" | "$0" | "$xsPX" | "$smPX" | "$mdPX" | "$lgPX" | "$xlPX" | "$1" | "$2" | "$3" | "$4" | "$5" | "$6" | "$7" | "$8" | "$9" | "$10" | "$11" | "$12" | "$13" | "$14" | "$15" | "$16" | "$17" | "$18" | "$20" | "$24" | "$28" | "$32" | "$36" | "$40" | "$44" | "$48" | "$52" | "$56" | "$60" | "$64" | "$72" | "$80" | "$96" | {
                scale: "space";
            };
            linearGradient?: string;
            tdl?: import("@stitches/core/types/css").Property.TextDecorationLine | {
                readonly [$$PropertyValue]: "textDecorationLine";
            } | import("@stitches/core/types/css").Globals;
            textGradient?: string;
        } & {
            gridGap?: import("@stitches/core/types/css").Globals | import("@stitches/core/types/util").Index;
            gridColumnGap?: import("@stitches/core/types/css").Globals | import("@stitches/core/types/util").Index;
            gridRowGap?: import("@stitches/core/types/css").Globals | import("@stitches/core/types/util").Index;
        } & {
            [K: string]: string | number | {} | import("@stitches/core/types/css-util").CSS<{
                xs: "(min-width: 576px)";
                sm: "(min-width: 768px)";
                md: "(min-width: 992px)";
                lg: "(min-width: 1200px)";
                xl: "(min-width: 1400px)";
            }, {
                colors: {
                    dark50: any;
                    dark100: any;
                    dark200: any;
                    dark300: any;
                    dark400: any;
                    dark500: any;
                    dark600: any;
                    dark700: any;
                    dark800: any;
                    dark900: any;
                    gray50: any;
                    gray100: any;
                    gray200: any;
                    gray300: any;
                    gray400: any;
                    gray500: any;
                    gray600: any;
                    gray700: any;
                    gray800: any;
                    gray900: any;
                    red50: any;
                    red100: any;
                    red200: any;
                    red300: any;
                    red400: any;
                    red500: any;
                    red600: any;
                    red700: any;
                    red800: any;
                    red900: any;
                    pink50: any;
                    pink100: any;
                    pink200: any;
                    pink300: any;
                    pink400: any;
                    pink500: any;
                    pink600: any;
                    pink700: any;
                    pink800: any;
                    pink900: any;
                    grape50: any;
                    grape100: any;
                    grape200: any;
                    grape300: any;
                    grape400: any;
                    grape500: any;
                    grape600: any;
                    grape700: any;
                    grape800: any;
                    grape900: any;
                    violet50: any;
                    violet100: any;
                    violet200: any;
                    violet300: any;
                    violet400: any;
                    violet500: any;
                    violet600: any;
                    violet700: any;
                    violet800: any;
                    violet900: any;
                    indigo50: any;
                    indigo100: any;
                    indigo200: any;
                    indigo300: any;
                    indigo400: any;
                    indigo500: any;
                    indigo600: any;
                    indigo700: any;
                    indigo800: any;
                    indigo900: any;
                    blue50: any;
                    blue100: any;
                    blue200: any;
                    blue300: any;
                    blue400: any;
                    blue500: any;
                    blue600: any;
                    blue700: any;
                    blue800: any;
                    blue900: any;
                    cyan50: any;
                    cyan100: any;
                    cyan200: any;
                    cyan300: any;
                    cyan400: any;
                    cyan500: any;
                    cyan600: any;
                    cyan700: any;
                    cyan800: any;
                    cyan900: any;
                    teal50: any;
                    teal100: any;
                    teal200: any;
                    teal300: any;
                    teal400: any;
                    teal500: any;
                    teal600: any;
                    teal700: any;
                    teal800: any;
                    teal900: any;
                    green50: any;
                    green100: any;
                    green200: any;
                    green300: any;
                    green400: any;
                    green500: any;
                    green600: any;
                    green700: any;
                    green800: any;
                    green900: any;
                    lime50: any;
                    lime100: any;
                    lime200: any;
                    lime300: any;
                    lime400: any;
                    lime500: any;
                    lime600: any;
                    lime700: any;
                    lime800: any;
                    lime900: any;
                    yellow50: any;
                    yellow100: any;
                    yellow200: any;
                    yellow300: any;
                    yellow400: any;
                    yellow500: any;
                    yellow600: any;
                    yellow700: any;
                    yellow800: any;
                    yellow900: any;
                    orange50: any;
                    orange100: any;
                    orange200: any;
                    orange300: any;
                    orange400: any;
                    orange500: any;
                    orange600: any;
                    orange700: any;
                    orange800: any;
                    orange900: any;
                    primary: any;
                    white: any;
                    black: any;
                };
                space: {
                    0: string;
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                    xsPX: string;
                    smPX: string;
                    mdPX: string;
                    lgPX: string;
                    xlPX: string;
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    6: string;
                    7: string;
                    8: string;
                    9: string;
                    10: string;
                    11: string;
                    12: string;
                    13: string;
                    14: string;
                    15: string;
                    16: string;
                    17: string;
                    18: string;
                    20: string;
                    24: string;
                    28: string;
                    32: string;
                    36: string;
                    40: string;
                    44: string;
                    48: string;
                    52: string;
                    56: string;
                    60: string;
                    64: string;
                    72: string;
                    80: string;
                    96: string;
                };
                fontSizes: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                fonts: {
                    standard: string;
                    mono: string;
                    fallback: string;
                };
                fontWeights: {
                    thin: number;
                    extralight: number;
                    light: number;
                    normal: number;
                    medium: number;
                    semibold: number;
                    bold: number;
                    extrabold: number;
                };
                lineHeights: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                letterSpacings: {
                    tighter: string;
                    tight: string;
                    normal: string;
                    wide: string;
                    wider: string;
                    widest: string;
                };
                sizes: unknown;
                radii: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                    squared: string;
                    rounded: string;
                    pill: string;
                };
                shadows: {
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                zIndices: {
                    1: string;
                    2: string;
                    3: string;
                    4: string;
                    5: string;
                    10: string;
                    max: string;
                };
                borderWidths: {
                    light: string;
                    normal: string;
                    bold: string;
                    extrabold: string;
                    black: string;
                    xs: string;
                    sm: string;
                    md: string;
                    lg: string;
                    xl: string;
                };
                breakpoints: {
                    xs: number;
                    sm: number;
                    md: number;
                    lg: number;
                    xl: number;
                };
                borderStyles: unknown;
                transitions: unknown;
            }, {
                width: "space";
                height: "space";
                minWidth: "space";
                maxWidth: "space";
                minHeight: "space";
                maxHeight: "space";
                flexBasis: "space";
                gridTemplateColumns: "space";
                gridTemplateRows: "space";
                blockSize: "space";
                minBlockSize: "space";
                maxBlockSize: "space";
                inlineSize: "space";
                minInlineSize: "space";
                maxInlineSize: "space";
                borderWidth: "borderWeights";
                gap: "space";
                gridGap: "space";
                columnGap: "space";
                gridColumnGap: "space";
                rowGap: "space";
                gridRowGap: "space";
                inset: "space";
                insetBlock: "space";
                insetBlockEnd: "space";
                insetBlockStart: "space";
                insetInline: "space";
                insetInlineEnd: "space";
                insetInlineStart: "space";
                margin: "space";
                marginTop: "space";
                marginRight: "space";
                marginBottom: "space";
                marginLeft: "space";
                marginBlock: "space";
                marginBlockEnd: "space";
                marginBlockStart: "space";
                marginInline: "space";
                marginInlineEnd: "space";
                marginInlineStart: "space";
                padding: "space";
                paddingTop: "space";
                paddingRight: "space";
                paddingBottom: "space";
                paddingLeft: "space";
                paddingBlock: "space";
                paddingBlockEnd: "space";
                paddingBlockStart: "space";
                paddingInline: "space";
                paddingInlineEnd: "space";
                paddingInlineStart: "space";
                scrollMargin: "space";
                scrollMarginTop: "space";
                scrollMarginRight: "space";
                scrollMarginBottom: "space";
                scrollMarginLeft: "space";
                scrollMarginBlock: "space";
                scrollMarginBlockEnd: "space";
                scrollMarginBlockStart: "space";
                scrollMarginInline: "space";
                scrollMarginInlineEnd: "space";
                scrollMarginInlineStart: "space";
                scrollPadding: "space";
                scrollPaddingTop: "space";
                scrollPaddingRight: "space";
                scrollPaddingBottom: "space";
                scrollPaddingLeft: "space";
                scrollPaddingBlock: "space";
                scrollPaddingBlockEnd: "space";
                scrollPaddingBlockStart: "space";
                scrollPaddingInline: "space";
                scrollPaddingInlineEnd: "space";
                scrollPaddingInlineStart: "space";
                top: "space";
                right: "space";
                bottom: "space";
                left: "space";
                fontSize: "fontSizes";
                background: "colors";
                backgroundColor: "colors";
                backgroundImage: "colors";
                borderImage: "colors";
                border: "colors";
                borderBlock: "colors";
                borderBlockEnd: "colors";
                borderBlockStart: "colors";
                borderBottom: "colors";
                borderBottomColor: "colors";
                borderColor: "colors";
                borderInline: "colors";
                borderInlineEnd: "colors";
                borderInlineStart: "colors";
                borderLeft: "colors";
                borderLeftColor: "colors";
                borderRight: "colors";
                borderRightColor: "colors";
                borderTop: "colors";
                borderTopColor: "colors";
                caretColor: "colors";
                color: "colors";
                columnRuleColor: "colors";
                outline: "colors";
                outlineColor: "colors";
                fill: "colors";
                stroke: "colors";
                textDecorationColor: "colors";
                fontFamily: "fonts";
                fontWeight: "fontWeights";
                lineHeight: "lineHeights";
                letterSpacing: "letterSpacings";
                borderTopWidth: "borderWidths";
                borderLeftWidth: "borderWidths";
                borderRightWidth: "borderWidths";
                borderBottomWidth: "borderWidths";
                borderStyle: "borderStyles";
                borderTopStyle: "borderStyles";
                borderLeftStyle: "borderStyles";
                borderRightStyle: "borderStyles";
                borderBottomStyle: "borderStyles";
                borderRadius: "radii";
                borderTopLeftRadius: "radii";
                borderTopRightRadius: "radii";
                borderBottomRightRadius: "radii";
                borderBottomLeftRadius: "radii";
                boxShadow: "shadows";
                textShadow: "shadows";
                transition: "transitions";
                zIndex: "zIndices";
            }, {
                focusRing: (value: "auto" | "always" | "never") => {
                    WebkitTapHighlightColor: string;
                    '&:focus': {
                        outlineOffset: number;
                        outline: string;
                    };
                    '&:focus:not(:focus-visible)': {
                        outline: string;
                    };
                };
                p: (value: {
                    readonly [$$ScaleValue]: "space";
                }) => {
                    padding: {
                        readonly [$$ScaleValue]: "space";
                    };
                };
                pt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                pl: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                px: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                py: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    paddingTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    paddingBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                m: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    margin: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mt: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mr: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mb: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ml: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mx: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginLeft: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginRight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                my: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    marginTop: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    marginBottom: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                ta: (value: {
                    readonly [$$PropertyValue]: "textAlign";
                }) => {
                    textAlign: {
                        readonly [$$PropertyValue]: "textAlign";
                    };
                };
                tt: (value: {
                    readonly [$$PropertyValue]: "textTransform";
                }) => {
                    textTransform: {
                        readonly [$$PropertyValue]: "textTransform";
                    };
                };
                to: (value: {
                    readonly [$$PropertyValue]: "textOverflow";
                }) => {
                    textOverflow: {
                        readonly [$$PropertyValue]: "textOverflow";
                    };
                };
                d: (value: {
                    readonly [$$PropertyValue]: "display";
                }) => {
                    display: {
                        readonly [$$PropertyValue]: "display";
                    };
                };
                dflex: (value: {
                    readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                }) => {
                    display: string;
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                    justifyContent: {
                        readonly [$$PropertyValue]: "alignItems" | "justifyContent";
                    };
                };
                fd: (value: {
                    readonly [$$PropertyValue]: "flexDirection";
                }) => {
                    flexDirection: {
                        readonly [$$PropertyValue]: "flexDirection";
                    };
                };
                fw: (value: {
                    readonly [$$PropertyValue]: "flexWrap";
                }) => {
                    flexWrap: {
                        readonly [$$PropertyValue]: "flexWrap";
                    };
                };
                ai: (value: {
                    readonly [$$PropertyValue]: "alignItems";
                }) => {
                    alignItems: {
                        readonly [$$PropertyValue]: "alignItems";
                    };
                };
                ac: (value: {
                    readonly [$$PropertyValue]: "alignContent";
                }) => {
                    alignContent: {
                        readonly [$$PropertyValue]: "alignContent";
                    };
                };
                jc: (value: {
                    readonly [$$PropertyValue]: "justifyContent";
                }) => {
                    justifyContent: {
                        readonly [$$PropertyValue]: "justifyContent";
                    };
                };
                as: (value: {
                    readonly [$$PropertyValue]: "alignSelf";
                }) => {
                    alignSelf: {
                        readonly [$$PropertyValue]: "alignSelf";
                    };
                };
                fg: (value: {
                    readonly [$$PropertyValue]: "flexGrow";
                }) => {
                    flexGrow: {
                        readonly [$$PropertyValue]: "flexGrow";
                    };
                };
                fs: (value: {
                    readonly [$$PropertyValue]: "fontSize";
                }) => {
                    fontSize: {
                        readonly [$$PropertyValue]: "fontSize";
                    };
                };
                fb: (value: {
                    readonly [$$PropertyValue]: "flexBasis";
                }) => {
                    flexBasis: {
                        readonly [$$PropertyValue]: "flexBasis";
                    };
                };
                bc: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                bf: (value: {
                    readonly [$$PropertyValue]: "backdropFilter";
                }) => {
                    backdropFilter: {
                        readonly [$$PropertyValue]: "backdropFilter";
                    };
                };
                bg: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    background: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgBlur: (value: {
                    readonly [$$PropertyValue]: "background";
                }) => {
                    bf: string;
                    bg: {
                        readonly [$$PropertyValue]: "background";
                    };
                };
                bgColor: (value: {
                    readonly [$$PropertyValue]: "backgroundColor";
                }) => {
                    backgroundColor: {
                        readonly [$$PropertyValue]: "backgroundColor";
                    };
                };
                backgroundClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                bgClip: (value: {
                    readonly [$$PropertyValue]: "backgroundClip";
                }) => {
                    WebkitBackgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                    backgroundClip: {
                        readonly [$$PropertyValue]: "backgroundClip";
                    };
                };
                br: (value: {
                    readonly [$$PropertyValue]: "borderRadius";
                }) => {
                    borderRadius: {
                        readonly [$$PropertyValue]: "borderRadius";
                    };
                };
                bw: (value: {
                    readonly [$$PropertyValue]: "borderWidth";
                }) => {
                    borderWidth: {
                        readonly [$$PropertyValue]: "borderWidth";
                    };
                };
                btrr: (value: {
                    readonly [$$PropertyValue]: "borderTopRightRadius";
                }) => {
                    borderTopRightRadius: {
                        readonly [$$PropertyValue]: "borderTopRightRadius";
                    };
                };
                bbrr: (value: {
                    readonly [$$PropertyValue]: "borderBottomRightRadius";
                }) => {
                    borderBottomRightRadius: {
                        readonly [$$PropertyValue]: "borderBottomRightRadius";
                    };
                };
                bblr: (value: {
                    readonly [$$PropertyValue]: "borderBottomLeftRadius";
                }) => {
                    borderBottomLeftRadius: {
                        readonly [$$PropertyValue]: "borderBottomLeftRadius";
                    };
                };
                btlr: (value: {
                    readonly [$$PropertyValue]: "borderTopLeftRadius";
                }) => {
                    borderTopLeftRadius: {
                        readonly [$$PropertyValue]: "borderTopLeftRadius";
                    };
                };
                bs: (value: {
                    readonly [$$PropertyValue]: "boxShadow";
                }) => {
                    boxShadow: {
                        readonly [$$PropertyValue]: "boxShadow";
                    };
                };
                normalShadow: (value: import("../../styles/theme/default-colors").Color) => {
                    boxShadow: string;
                };
                lh: (value: {
                    readonly [$$PropertyValue]: "lineHeight";
                }) => {
                    lineHeight: {
                        readonly [$$PropertyValue]: "lineHeight";
                    };
                };
                ov: (value: {
                    readonly [$$PropertyValue]: "overflow";
                }) => {
                    overflow: {
                        readonly [$$PropertyValue]: "overflow";
                    };
                };
                ox: (value: {
                    readonly [$$PropertyValue]: "overflowX";
                }) => {
                    overflowX: {
                        readonly [$$PropertyValue]: "overflowX";
                    };
                };
                oy: (value: {
                    readonly [$$PropertyValue]: "overflowY";
                }) => {
                    overflowY: {
                        readonly [$$PropertyValue]: "overflowY";
                    };
                };
                pe: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                events: (value: {
                    readonly [$$PropertyValue]: "pointerEvents";
                }) => {
                    pointerEvents: {
                        readonly [$$PropertyValue]: "pointerEvents";
                    };
                };
                us: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                userSelect: (value: {
                    readonly [$$PropertyValue]: "userSelect";
                }) => {
                    WebkitUserSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                    userSelect: {
                        readonly [$$PropertyValue]: "userSelect";
                    };
                };
                w: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                h: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mw: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxW: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                mh: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxH: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                size: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                minSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMin: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    minWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    minHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    width: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    height: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                maxSize: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                sizeMax: (value: import("../../internal").LiteralUnion<{
                    readonly [$$ScaleValue]: "space";
                }, string | number>) => {
                    maxWidth: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                    maxHeight: import("../../internal").LiteralUnion<{
                        readonly [$$ScaleValue]: "space";
                    }, string | number>;
                };
                appearance: (value: {
                    readonly [$$PropertyValue]: "appearance";
                }) => {
                    WebkitAppearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                    appearance: {
                        readonly [$$PropertyValue]: "appearance";
                    };
                };
                scale: (value: string) => {
                    transform: string;
                };
                linearGradient: (value: string) => {
                    backgroundImage: string;
                };
                tdl: (value: {
                    readonly [$$PropertyValue]: "textDecorationLine";
                }) => {
                    textDecorationLine: {
                        readonly [$$PropertyValue]: "textDecorationLine";
                    };
                };
                textGradient: (value: string) => {
                    backgroundImage: string;
                    WebkitBackgroundClip: string;
                    WebkitTextFillColor: string;
                };
            }>;
        };
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        position?: "bottom" | "left" | "right" | "top";
        placement?: "center" | "end" | "start";
        gutter?: number;
        arrowSize?: number;
        arrowDistance?: number;
        arrowClassName?: string;
        withArrow?: boolean;
        exitTransition?: import("../Popper").Transition;
        exitTransitionOptions?: import("../../internal").TransitionOptions;
        mounted?: boolean;
        reference?: HTMLElement;
    };
    events: {
        close: CustomEvent<any>;
        open: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        control: {
            class: string;
        };
        default: {};
    };
};
export declare type MenuProps = typeof __propDef.props;
export declare type MenuEvents = typeof __propDef.events;
export declare type MenuSlots = typeof __propDef.slots;
export default class Menu extends SvelteComponentTyped<MenuProps, MenuEvents, MenuSlots> {
    get open(): () => void;
    get close(): () => void;
    get toggle(): () => void;
}
export {};
