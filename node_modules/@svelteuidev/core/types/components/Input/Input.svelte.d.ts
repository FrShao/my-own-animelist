import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        invalid?: boolean;
        multiline?: boolean;
        autocomplete?: string;
        icon?: HTMLOrSVGElement | typeof import("svelte").SvelteComponent;
        iconWidth?: number;
        iconProps?: {
            size: number;
            color: string;
        };
        showRightSection?: boolean;
        rightSectionWidth?: number;
        rightSectionProps?: Record<string, unknown>;
        wrapperProps?: Record<string, unknown>;
        placeholder?: string;
        id?: string;
        required?: boolean;
        radius?: import("../..").SvelteUINumberSize;
        variant?: import("./Input.styles").InputVariant;
        disabled?: boolean;
        size?: import("../..").SvelteUISize;
        root?: typeof import("svelte").SvelteComponent | keyof HTMLElementTagNameMap;
        value?: string;
        className?: string;
        override?: import("../..").CSS;
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
        rightSection: {};
    };
};
export declare type InputProps = typeof __propDef.props;
export declare type InputEvents = typeof __propDef.events;
export declare type InputSlots = typeof __propDef.slots;
/**
 * **DISCLAIMER: In most cases, you should not use Input component in your application. Input component is a base for other inputs and was not designed to be used directly.**
 *
 * Base component to create custom inputs
 *
 * @see https://svelteui.org/core/input
 * @example
 *    ```svelte
 *    <Input
 *      icon={Twitter}
 *      placeholder="Your twitter"
 *      rightSectionWidth={70}
 *      override={{ '& .rightSection': { pointerEvents: 'none' } }}
 *    >
 * 	<Badge slot='rightSection' color="blue" variant="filled">
 * 		new
 * 	</Badge>
 * <Input />
 *    ```
 */
export default class Input extends SvelteComponentTyped<InputProps, InputEvents, InputSlots> {
}
export {};
