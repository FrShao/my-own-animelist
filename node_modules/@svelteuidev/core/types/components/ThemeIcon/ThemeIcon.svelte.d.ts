import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        size?: import("../..").SvelteUINumberSize;
        radius?: import("../..").SvelteUINumberSize;
        color?: import("../..").SvelteUIColor;
        variant?: import("./ThemeIcon.styles").ThemeIconVariant;
        gradient?: import("../..").SvelteUIGradient;
        className?: string;
        override?: import("../..").CSS;
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ThemeIconProps = typeof __propDef.props;
export declare type ThemeIconEvents = typeof __propDef.events;
export declare type ThemeIconSlots = typeof __propDef.slots;
/**
 * **UNSTABLE:** new API, yet to be vetted.
 *
 * Render icon inside element with theme colors
 *
 * @see https://svelteui.org/core/theme-icon
 * @example
 *    ```svelte
 *    <ThemeIcon>
 *      <Icon />
 *    </ThemeIcon>
 *
 * <ThemeIcon size="lg" variant="gradient" gradient={{ from: 'indigo', to: 'cyan' }}>
 *        <Icon size={20} />
 *    </ThemeIcon>
 *    ```
 */
export default class ThemeIcon extends SvelteComponentTyped<ThemeIconProps, ThemeIconEvents, ThemeIconSlots> {
}
export {};
