import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        opened?: boolean;
        color?: import("../../styles").SvelteUIColor;
        size?: import("../../styles").SvelteUINumberSize;
        className?: string;
        override?: import("../../styles").CSS;
        element?: HTMLButtonElement | HTMLAnchorElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type BurgerProps = typeof __propDef.props;
export declare type BurgerEvents = typeof __propDef.events;
export declare type BurgerSlots = typeof __propDef.slots;
export default class Burger extends SvelteComponentTyped<BurgerProps, BurgerEvents, BurgerSlots> {
}
export {};
