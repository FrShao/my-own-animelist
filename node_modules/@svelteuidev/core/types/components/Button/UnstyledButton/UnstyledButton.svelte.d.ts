import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        root: keyof HTMLElementTagNameMap;
        variant?: import("..").ButtonVariant;
        color?: import("../../..").SvelteUIColor;
        size?: import("../../..").SvelteUINumberSize;
        radius?: number | import("../../..").SvelteUINumberSize;
        gradient?: import("../../..").SvelteUIGradient;
        loaderPosition?: "left" | "right";
        loaderProps?: import("../Button.styles").LoaderProps;
        href?: string;
        external?: boolean;
        disabled?: boolean;
        compact?: boolean;
        loading?: boolean;
        uppercase?: boolean;
        fullSize?: boolean;
        ripple?: boolean;
        className?: string;
        override?: import("../../..").CSS;
        element?: HTMLButtonElement | HTMLAnchorElement;
        use?: import("../../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type UnstyledButtonProps = typeof __propDef.props;
export declare type UnstyledButtonEvents = typeof __propDef.events;
export declare type UnstyledButtonSlots = typeof __propDef.slots;
export default class UnstyledButton extends SvelteComponentTyped<UnstyledButtonProps, UnstyledButtonEvents, UnstyledButtonSlots> {
}
export {};
