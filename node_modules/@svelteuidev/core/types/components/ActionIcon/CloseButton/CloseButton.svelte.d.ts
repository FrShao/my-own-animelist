import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        iconSize?: import("../../..").SvelteUINumberSize;
        color?: import("../../..").SvelteUIColor;
        variant?: import("../ActionIcon.styles").ActionIconVariant;
        size?: import("../../..").SvelteUINumberSize;
        radius?: number | import("../../..").SvelteUINumberSize;
        loaderProps?: import("../..").LoaderProps;
        loading?: boolean;
        disabled?: boolean;
        href?: string;
        external?: boolean;
        className?: string;
        override?: import("../../..").CSS;
        element?: HTMLElement;
        use?: import("../../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../../..").SvelteUINumberSize | (string & Record<never, never>);
        root?: import("../../../internal").LiteralUnion<typeof import("svelte").SvelteComponent | keyof HTMLElementTagNameMap, string>;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type CloseButtonProps = typeof __propDef.props;
export declare type CloseButtonEvents = typeof __propDef.events;
export declare type CloseButtonSlots = typeof __propDef.slots;
/**
 * CloseButton is a premade ActionIcon with close icon
 *
 * @see https://svelteui.org/core/action-icon
 * @example
 * ```tsx
 * <CloseButton /> // standard CloseButton
 * ```
 */
export default class CloseButton extends SvelteComponentTyped<CloseButtonProps, CloseButtonEvents, CloseButtonSlots> {
}
export {};
