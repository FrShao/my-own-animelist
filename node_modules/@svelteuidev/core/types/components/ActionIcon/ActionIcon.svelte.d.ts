import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        color?: import("../..").SvelteUIColor;
        variant?: import("./ActionIcon.styles").ActionIconVariant;
        size?: import("../..").SvelteUINumberSize;
        radius?: number | import("../..").SvelteUINumberSize;
        loaderProps?: import("..").LoaderProps;
        loading?: boolean;
        disabled?: boolean;
        href?: string;
        external?: boolean;
        className?: string;
        override?: import("../..").CSS;
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        root?: import("../../internal").LiteralUnion<typeof import("svelte").SvelteComponent | keyof HTMLElementTagNameMap, string>;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ActionIconProps = typeof __propDef.props;
export declare type ActionIconEvents = typeof __propDef.events;
export declare type ActionIconSlots = typeof __propDef.slots;
/**
 * Icon button to indicate secondary action.
 *
 * @see https://svelteui.org/core/action-icon
 * @example
 * ```tsx
 * <ActionIcon>Click</ActionIcon> // standard ActionIcon
 * <ActionIcon color="red" /> // red ActionIcon
 * <ActionIcon variant="default"><Discord></ActionIcon> // default variant with an icon
 * ```
 */
export default class ActionIcon extends SvelteComponentTyped<ActionIconProps, ActionIconEvents, ActionIconSlots> {
}
export {};
