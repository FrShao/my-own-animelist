import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        override?: import("../../styles").CSS;
        color?: import("../../styles").SvelteUIColor;
        size?: import("../../styles").SvelteUINumberSize;
        radius?: import("../../styles").SvelteUINumberSize;
        transitionFunction?: import("./Switch.styles").SwitchTimingFunction;
        className?: string;
        id?: string;
        label?: string;
        onLabel?: string;
        offLabel?: string;
        disabled?: boolean;
        checked?: boolean;
        element?: HTMLInputElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type SwitchProps = typeof __propDef.props;
export declare type SwitchEvents = typeof __propDef.events;
export declare type SwitchSlots = typeof __propDef.slots;
/**
 * A user can use this component to enable/disable something, normally used for boolean values or for binary actions.
 *
 * @see https://svelteui.org/core/switch
 * @example
 * ```tsx
 * <Switch/> // standard switch
 * <Switch label="Lights" onLabel="ON" offLabel="OFF"/> // switch with labels
 * ```
 */
export default class Switch extends SvelteComponentTyped<SwitchProps, SwitchEvents, SwitchSlots> {
}
export {};
