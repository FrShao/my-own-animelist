import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        class?: string;
        opened: boolean;
        title?: any;
        zIndex?: number;
        overflow?: "inside" | "outside";
        withCloseButton?: boolean;
        overlayOpacity?: number;
        overlayColor?: string;
        overlayBlur?: number;
        radius?: import("../../styles").SvelteUINumberSize;
        size?: import("../..").LiteralUnion<import("../../styles").SvelteUISize, string | number>;
        transition?: import("../../styles").Transition;
        transitionDuration?: number;
        transitionTimingFunction?: string;
        closeButtonLabel?: string;
        id?: string;
        shadow?: import("../../styles").SvelteUIShadow;
        padding?: import("../../styles").SvelteUINumberSize;
        closeOnClickOutside?: boolean;
        closeOnEscape?: boolean;
        trapFocus?: boolean;
        centered?: boolean;
        target?: string | HTMLElement;
        withinPortal?: boolean;
        className?: string;
        override?: import("../../styles").CSS;
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../../styles").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        close: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ModalProps = typeof __propDef.props;
export declare type ModalEvents = typeof __propDef.events;
export declare type ModalSlots = typeof __propDef.slots;
export default class Modal extends SvelteComponentTyped<ModalProps, ModalEvents, ModalSlots> {
}
export {};
