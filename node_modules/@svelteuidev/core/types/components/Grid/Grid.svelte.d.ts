import { SvelteComponentTyped } from "svelte";
export declare const ctx = "Grid";
declare const __propDef: {
    props: {
        class?: string;
        align?: import("@stitches/core/types/css").Property.AlignItems | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
        cols?: number;
        grow?: boolean;
        spacing?: import("../..").SvelteUINumberSize;
        justify?: import("@stitches/core/types/css").Property.JustifyContent | import("@stitches/core/types/css").Globals | import("@stitches/core/types/theme").ScaleValue | import("@stitches/core/types/util").Index;
        className?: string;
        override?: import("../..").CSS;
        element?: HTMLElement;
        use?: import("../../internal/utils/forwarding/forward-actions").ActionArray;
        m?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        my?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mx?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        ml?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        mr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        p?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        py?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        px?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pt?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pb?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pl?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
        pr?: import("../..").SvelteUINumberSize | (string & Record<never, never>);
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type GridProps = typeof __propDef.props;
export declare type GridEvents = typeof __propDef.events;
export declare type GridSlots = typeof __propDef.slots;
/**
 * Flexbox grid with variable amount of columns
 *
 * @see https://svelteui.org/core/grid
 * @example
 * ```svelte
 * <Grid cols={3} align='center'>
 *   <Grid.Col span={4}>1</Grid.Col>
 *   <Grid.Col span={4}>2</Grid.Col>
 *   <Grid.Col span={4}>3</Grid.Col>
 * </Grid>
 * ```
 */
export default class Grid extends SvelteComponentTyped<GridProps, GridEvents, GridSlots> {
}
export {};
