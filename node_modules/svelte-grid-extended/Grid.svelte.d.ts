import { SvelteComponentTyped } from "svelte";
import type { Breakpoints, ItemSize, GridSize, LayoutItem } from './types';
declare class __sveltets_Render<T> {
    props(): {
        cols?: GridSize | undefined;
        rows?: GridSize | undefined;
        itemSize?: Partial<ItemSize> | undefined;
        gap?: number | undefined;
        items: LayoutItem<T>[];
        breakpoints?: Breakpoints | undefined;
        bounds?: boolean | undefined;
        readOnly?: boolean | undefined;
        debug?: boolean | undefined;
        class?: string | undefined;
        itemClass?: string | undefined;
        itemActiveClass?: string | undefined;
        itemPreviewClass?: string | undefined;
        itemResizerClass?: string | undefined;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {
            item: LayoutItem<T>;
        };
        loader: Record<string, never>;
    };
}
export declare type GridProps<T> = ReturnType<__sveltets_Render<T>['props']>;
export declare type GridEvents<T> = ReturnType<__sveltets_Render<T>['events']>;
export declare type GridSlots<T> = ReturnType<__sveltets_Render<T>['slots']>;
export default class Grid<T> extends SvelteComponentTyped<GridProps<T>, GridEvents<T>, GridSlots<T>> {
}
export {};
